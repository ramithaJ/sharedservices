package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Jun 26, 2015 10:24:59 AM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OrderArticleQuery generated by hbm2java
 */
@Entity
@Table(name = "ORDER_ARTICLE_QUERY")
public class OrderArticleQuery implements java.io.Serializable {

	private Integer orderQueryId;
	private SavedOrders savedOrders;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private Integer trackingNumber;
	private String title;
	private Date createdDate;
	private Date updatedDate;
	private Set<OrderAuthorsQuery> orderAuthorsQueries = new HashSet<OrderAuthorsQuery>(
			0);

	public OrderArticleQuery() {
	}

	public OrderArticleQuery(Integer orderQueryId) {
		this.orderQueryId = orderQueryId;
	}

	public OrderArticleQuery(Integer orderQueryId, SavedOrders savedOrders,
			Users usersByCreatedBy, Users usersByUpdatedBy,
			Integer trackingNumber, String title, Date createdDate,
			Date updatedDate, Set<OrderAuthorsQuery> orderAuthorsQueries) {
		this.orderQueryId = orderQueryId;
		this.savedOrders = savedOrders;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.trackingNumber = trackingNumber;
		this.title = title;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.orderAuthorsQueries = orderAuthorsQueries;
	}

	@Id
	@Column(name = "ORDER_QUERY_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getOrderQueryId() {
		return this.orderQueryId;
	}

	public void setOrderQueryId(Integer orderQueryId) {
		this.orderQueryId = orderQueryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SAVED_ORDER_ID")
	public SavedOrders getSavedOrders() {
		return this.savedOrders;
	}

	public void setSavedOrders(SavedOrders savedOrders) {
		this.savedOrders = savedOrders;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@Column(name = "TRACKING_NUMBER", precision = 22, scale = 0)
	public Integer getTrackingNumber() {
		return this.trackingNumber;
	}

	public void setTrackingNumber(Integer trackingNumber) {
		this.trackingNumber = trackingNumber;
	}

	@Column(name = "TITLE", length = 250)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orderArticleQuery")
	public Set<OrderAuthorsQuery> getOrderAuthorsQueries() {
		return this.orderAuthorsQueries;
	}

	public void setOrderAuthorsQueries(
			Set<OrderAuthorsQuery> orderAuthorsQueries) {
		this.orderAuthorsQueries = orderAuthorsQueries;
	}

}
