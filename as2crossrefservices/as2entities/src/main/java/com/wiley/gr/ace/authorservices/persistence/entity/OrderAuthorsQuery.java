package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Jun 26, 2015 10:24:59 AM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * OrderAuthorsQuery generated by hbm2java
 */
@Entity
@Table(name = "ORDER_AUTHORS_QUERY")
public class OrderAuthorsQuery implements java.io.Serializable {

	private Integer orderAuthorId;
	private OrderArticleQuery orderArticleQuery;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private String authorFirstName;
	private String authorLastName;
	private Date createdDate;
	private Date updatedDate;

	public OrderAuthorsQuery() {
	}

	public OrderAuthorsQuery(Integer orderAuthorId) {
		this.orderAuthorId = orderAuthorId;
	}

	public OrderAuthorsQuery(Integer orderAuthorId,
			OrderArticleQuery orderArticleQuery, Users usersByCreatedBy,
			Users usersByUpdatedBy, String authorFirstName,
			String authorLastName, Date createdDate, Date updatedDate) {
		this.orderAuthorId = orderAuthorId;
		this.orderArticleQuery = orderArticleQuery;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.authorFirstName = authorFirstName;
		this.authorLastName = authorLastName;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "ORDER_AUTHOR_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getOrderAuthorId() {
		return this.orderAuthorId;
	}

	public void setOrderAuthorId(Integer orderAuthorId) {
		this.orderAuthorId = orderAuthorId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDER_QUERY_ID")
	public OrderArticleQuery getOrderArticleQuery() {
		return this.orderArticleQuery;
	}

	public void setOrderArticleQuery(OrderArticleQuery orderArticleQuery) {
		this.orderArticleQuery = orderArticleQuery;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@Column(name = "AUTHOR_FIRST_NAME", length = 100)
	public String getAuthorFirstName() {
		return this.authorFirstName;
	}

	public void setAuthorFirstName(String authorFirstName) {
		this.authorFirstName = authorFirstName;
	}

	@Column(name = "AUTHOR_LAST_NAME", length = 100)
	public String getAuthorLastName() {
		return this.authorLastName;
	}

	public void setAuthorLastName(String authorLastName) {
		this.authorLastName = authorLastName;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
