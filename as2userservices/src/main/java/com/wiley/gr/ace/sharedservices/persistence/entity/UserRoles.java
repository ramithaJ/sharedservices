package com.wiley.gr.ace.sharedservices.persistence.entity;
// default package
// Generated Jun 23, 2015 4:17:36 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.*;
import java.util.Date;

/**
 * UserRoles generated by hbm2java
 */
@Entity
@Table(name = "USER_ROLES")
public class UserRoles implements java.io.Serializable {

    private UserRolesId id;
    private Users usersByCreatedBy;
    private Roles roles;
    private Users usersByUpdatedBy;
    private Users usersByUserId;
    private Date createdDate;
    private Date updatedDate;

    public UserRoles() {
    }

    public UserRoles(UserRolesId id, Roles roles, Users usersByUserId) {
        this.id = id;
        this.roles = roles;
        this.usersByUserId = usersByUserId;
    }

    public UserRoles(UserRolesId id, Users usersByCreatedBy, Roles roles,
                     Users usersByUpdatedBy, Users usersByUserId, Date createdDate,
                     Date updatedDate) {
        this.id = id;
        this.usersByCreatedBy = usersByCreatedBy;
        this.roles = roles;
        this.usersByUpdatedBy = usersByUpdatedBy;
        this.usersByUserId = usersByUserId;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
    }

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "userId", column = @Column(name = "USER_ID", nullable = false, precision = 22, scale = 0)),
            @AttributeOverride(name = "roleId", column = @Column(name = "ROLE_ID", nullable = false, precision = 22, scale = 0))})
    public UserRolesId getId() {
        return this.id;
    }

    public void setId(UserRolesId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATED_BY")
    public Users getUsersByCreatedBy() {
        return this.usersByCreatedBy;
    }

    public void setUsersByCreatedBy(Users usersByCreatedBy) {
        this.usersByCreatedBy = usersByCreatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ROLE_ID", nullable = false, insertable = false, updatable = false)
    public Roles getRoles() {
        return this.roles;
    }

    public void setRoles(Roles roles) {
        this.roles = roles;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UPDATED_BY")
    public Users getUsersByUpdatedBy() {
        return this.usersByUpdatedBy;
    }

    public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
        this.usersByUpdatedBy = usersByUpdatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_ID", nullable = false, insertable = false, updatable = false)
    public Users getUsersByUserId() {
        return this.usersByUserId;
    }

    public void setUsersByUserId(Users usersByUserId) {
        this.usersByUserId = usersByUserId;
    }

    @Column(name = "CREATED_DATE")
    public Date getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UPDATED_DATE")
    public Date getUpdatedDate() {
        return this.updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

}
