package com.wiley.gr.ace.sharedservices.persistence.entity;
// default package
// Generated Jun 23, 2015 4:17:36 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import javax.persistence.*;
import java.util.Date;

/**
 * UserAlerts generated by hbm2java
 */
@Entity
@Table(name = "USER_ALERTS")
public class UserAlerts implements java.io.Serializable {

    private UserAlertsId id;
    private Alerts alerts;
    private Users usersByCreatedBy;
    private Users usersByUpdatedBy;
    private UserProfile userProfile;
    private Character onScreenFlg;
    private Character emailFlg;
    private Date createdDate;
    private Date updatedDate;

    public UserAlerts() {
    }

    public UserAlerts(UserAlertsId id, Alerts alerts, UserProfile userProfile) {
        this.id = id;
        this.alerts = alerts;
        this.userProfile = userProfile;
    }

    public UserAlerts(UserAlertsId id, Alerts alerts, Users usersByCreatedBy,
                      Users usersByUpdatedBy, UserProfile userProfile,
                      Character onScreenFlg, Character emailFlg, Date createdDate,
                      Date updatedDate) {
        this.id = id;
        this.alerts = alerts;
        this.usersByCreatedBy = usersByCreatedBy;
        this.usersByUpdatedBy = usersByUpdatedBy;
        this.userProfile = userProfile;
        this.onScreenFlg = onScreenFlg;
        this.emailFlg = emailFlg;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
    }

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "userId", column = @Column(name = "USER_ID", nullable = false, precision = 22, scale = 0)),
            @AttributeOverride(name = "alertCd", column = @Column(name = "ALERT_CD", nullable = false, length = 15))})
    public UserAlertsId getId() {
        return this.id;
    }

    public void setId(UserAlertsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ALERT_CD", nullable = false, insertable = false, updatable = false)
    @OnDelete(action = OnDeleteAction.CASCADE)
    @Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
    public Alerts getAlerts() {
        return this.alerts;
    }

    public void setAlerts(Alerts alerts) {
        this.alerts = alerts;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATED_BY")
    public Users getUsersByCreatedBy() {
        return this.usersByCreatedBy;
    }

    public void setUsersByCreatedBy(Users usersByCreatedBy) {
        this.usersByCreatedBy = usersByCreatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UPDATED_BY")
    public Users getUsersByUpdatedBy() {
        return this.usersByUpdatedBy;
    }

    public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
        this.usersByUpdatedBy = usersByUpdatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_ID", nullable = false, insertable = false, updatable = false)
    public UserProfile getUserProfile() {
        return this.userProfile;
    }

    public void setUserProfile(UserProfile userProfile) {
        this.userProfile = userProfile;
    }

    @Column(name = "ON_SCREEN_FLG", length = 1)
    public Character getOnScreenFlg() {
        return this.onScreenFlg;
    }

    public void setOnScreenFlg(Character onScreenFlg) {
        this.onScreenFlg = onScreenFlg;
    }

    @Column(name = "EMAIL_FLG", length = 1)
    public Character getEmailFlg() {
        return this.emailFlg;
    }

    public void setEmailFlg(Character emailFlg) {
        this.emailFlg = emailFlg;
    }

    @Column(name = "CREATED_DATE")
    public Date getCreatedDate() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UPDATED_DATE")
    public Date getUpdatedDate() {
        return this.updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

}
