package com.wiley.gr.ace.sharedservices.persistence.entity;

// Generated May 26, 2015 6:09:14 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.*;
import java.util.Date;

/**
 * AdditionalPermissions generated by hbm2java
 */
@Entity
@Table(name = "ADDITIONAL_PERMISSIONS")
public class AdditionalPermissions implements java.io.Serializable {

	private AdditionalPermissionsId id;
	private Roles roles;
	private Users usersByCreatedBy;
	private Users usersByUpdatedBy;
	private AuthorProfile authorProfile;
	private Permissions permissions;
	private Date createdDate;
	private Date updatedDate;

	public AdditionalPermissions() {
	}

	public AdditionalPermissions(AdditionalPermissionsId id,
			AuthorProfile authorProfile, Permissions permissions) {
		this.id = id;
		this.authorProfile = authorProfile;
		this.permissions = permissions;
	}

	public AdditionalPermissions(AdditionalPermissionsId id, Roles roles,
			Users usersByCreatedBy, Users usersByUpdatedBy,
			AuthorProfile authorProfile, Permissions permissions,
			Date createdDate, Date updatedDate) {
		this.id = id;
		this.roles = roles;
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByUpdatedBy = usersByUpdatedBy;
		this.authorProfile = authorProfile;
		this.permissions = permissions;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "userId", column = @Column(name = "USER_ID", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "articleId", column = @Column(name = "ARTICLE_ID", nullable = false, precision = 22, scale = 0)),
			@AttributeOverride(name = "permissionCd", column = @Column(name = "PERMISSION_CD", nullable = false, length = 25)) })
	public AdditionalPermissionsId getId() {
		return this.id;
	}

	public void setId(AdditionalPermissionsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROLE_ID")
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATED_BY")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UPDATED_BY")
	public Users getUsersByUpdatedBy() {
		return this.usersByUpdatedBy;
	}

	public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
		this.usersByUpdatedBy = usersByUpdatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID", nullable = false, insertable = false, updatable = false)
	public AuthorProfile getAuthorProfile() {
		return this.authorProfile;
	}

	public void setAuthorProfile(AuthorProfile authorProfile) {
		this.authorProfile = authorProfile;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERMISSION_CD", nullable = false, insertable = false, updatable = false)
	public Permissions getPermissions() {
		return this.permissions;
	}

	public void setPermissions(Permissions permissions) {
		this.permissions = permissions;
	}

	@Column(name = "CREATED_DATE")
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_DATE")
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
