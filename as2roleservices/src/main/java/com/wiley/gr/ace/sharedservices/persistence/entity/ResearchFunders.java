package com.wiley.gr.ace.sharedservices.persistence.entity;

// Generated Jul 7, 2015 5:39:57 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ResearchFunders generated by hbm2java
 */
@Entity
@Table(name = "RESEARCH_FUNDERS")
public class ResearchFunders implements java.io.Serializable {

    private Integer resfunderid;
    private Users usersByCreatedBy;
    private Users usersByUpdatedBy;
    private String funderDoi;
    private String funderName;
    private Date createdDate;
    private Date updatedDate;
    private Set<UserFunders> userFunderses = new HashSet<UserFunders>(0);

    public ResearchFunders() {
    }

    public ResearchFunders(Integer resfunderid) {
        this.resfunderid = resfunderid;
    }

    public ResearchFunders(Integer resfunderid, Users usersByCreatedBy,
            Users usersByUpdatedBy, String funderDoi, String funderName,
            Date createdDate, Date updatedDate, Set<UserFunders> userFunderses) {
        this.resfunderid = resfunderid;
        this.usersByCreatedBy = usersByCreatedBy;
        this.usersByUpdatedBy = usersByUpdatedBy;
        this.funderDoi = funderDoi;
        this.funderName = funderName;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
        this.userFunderses = userFunderses;
    }

    @Id
    @Column(name = "RESFUNDERID", unique = true, nullable = false, precision = 22, scale = 0)
    public Integer getResfunderid() {
        return resfunderid;
    }

    public void setResfunderid(Integer resfunderid) {
        this.resfunderid = resfunderid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATED_BY")
    public Users getUsersByCreatedBy() {
        return usersByCreatedBy;
    }

    public void setUsersByCreatedBy(Users usersByCreatedBy) {
        this.usersByCreatedBy = usersByCreatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UPDATED_BY")
    public Users getUsersByUpdatedBy() {
        return usersByUpdatedBy;
    }

    public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
        this.usersByUpdatedBy = usersByUpdatedBy;
    }

    @Column(name = "FUNDER_DOI", length = 50)
    public String getFunderDoi() {
        return funderDoi;
    }

    public void setFunderDoi(String funderDoi) {
        this.funderDoi = funderDoi;
    }

    @Column(name = "FUNDER_NAME", length = 250)
    public String getFunderName() {
        return funderName;
    }

    public void setFunderName(String funderName) {
        this.funderName = funderName;
    }

    @Column(name = "CREATED_DATE")
    public Date getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UPDATED_DATE")
    public Date getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "researchFunders")
    public Set<UserFunders> getUserFunderses() {
        return userFunderses;
    }

    public void setUserFunderses(Set<UserFunders> userFunderses) {
        this.userFunderses = userFunderses;
    }

}
