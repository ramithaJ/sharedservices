package com.wiley.gr.ace.sharedservices.persistence.entity;

// Generated Jul 7, 2015 5:39:57 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserFunders generated by hbm2java
 */
@Entity
@Table(name = "USER_FUNDERS")
public class UserFunders implements java.io.Serializable {

    private Integer userFunderId;
    private ResearchFunders researchFunders;
    private Users usersByCreatedBy;
    private Users usersByUpdatedBy;
    private UserProfile userProfile;
    private Date createdDate;
    private Date updatedDate;
    private Set<UserFunderGrants> userFunderGrantses = new HashSet<UserFunderGrants>(
            0);

    public UserFunders() {
    }

    public UserFunders(Integer userFunderId) {
        this.userFunderId = userFunderId;
    }

    public UserFunders(Integer userFunderId, ResearchFunders researchFunders,
            Users usersByCreatedBy, Users usersByUpdatedBy,
            UserProfile userProfile, Date createdDate, Date updatedDate,
            Set<UserFunderGrants> userFunderGrantses) {
        this.userFunderId = userFunderId;
        this.researchFunders = researchFunders;
        this.usersByCreatedBy = usersByCreatedBy;
        this.usersByUpdatedBy = usersByUpdatedBy;
        this.userProfile = userProfile;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
        this.userFunderGrantses = userFunderGrantses;
    }

    @Id
    @Column(name = "USER_FUNDER_ID", unique = true, nullable = false, precision = 22, scale = 0)
    public Integer getUserFunderId() {
        return userFunderId;
    }

    public void setUserFunderId(Integer userFunderId) {
        this.userFunderId = userFunderId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "RESFUNDERID")
    public ResearchFunders getResearchFunders() {
        return researchFunders;
    }

    public void setResearchFunders(ResearchFunders researchFunders) {
        this.researchFunders = researchFunders;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATED_BY")
    public Users getUsersByCreatedBy() {
        return usersByCreatedBy;
    }

    public void setUsersByCreatedBy(Users usersByCreatedBy) {
        this.usersByCreatedBy = usersByCreatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UPDATED_BY")
    public Users getUsersByUpdatedBy() {
        return usersByUpdatedBy;
    }

    public void setUsersByUpdatedBy(Users usersByUpdatedBy) {
        this.usersByUpdatedBy = usersByUpdatedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_ID")
    public UserProfile getUserProfile() {
        return userProfile;
    }

    public void setUserProfile(UserProfile userProfile) {
        this.userProfile = userProfile;
    }

    @Column(name = "CREATED_DATE")
    public Date getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    @Column(name = "UPDATED_DATE")
    public Date getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userFunders")
    public Set<UserFunderGrants> getUserFunderGrantses() {
        return userFunderGrantses;
    }

    public void setUserFunderGrantses(Set<UserFunderGrants> userFunderGrantses) {
        this.userFunderGrantses = userFunderGrantses;
    }

}
