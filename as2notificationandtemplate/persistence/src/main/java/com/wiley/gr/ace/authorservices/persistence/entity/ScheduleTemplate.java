/*******************************************************************************
 * Copyright (c) 2015 John Wiley & Sons, Inc. All rights reserved.
 *
 * All material contained herein is proprietary to John Wiley & Sons 
 * and its third party suppliers, if any. The methods, techniques and 
 * technical concepts contained herein are considered trade secrets 
 * and confidential and may be protected by intellectual property laws.  
 * Reproduction or distribution of this material, in whole or in part, 
 * is strictly forbidden except by express prior written permission 
 * of John Wiley & Sons.
 *******************************************************************************/
package com.wiley.gr.ace.authorservices.persistence.entity;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

/**
 * ScheduleTemplate generated by hbm2java.
 * 
 * @author virtusa version 1.0
 */
@Entity
@Table(name = "SCHEDULE_TEMPLATE")
public class ScheduleTemplate implements java.io.Serializable {

    /** The schedule id. */
    private String scheduleId;

    /** The template by onscreen tmpl. */
    private Template templateByOnscreenTmpl;

    /** The schedule. */
    private Schedule schedule;

    /** The template by email tmpl. */
    private Template templateByEmailTmpl;

    /** The delay. */
    private Integer delay;

    /**
     * Instantiates a new schedule template.
     */
    public ScheduleTemplate() {
    }

    /**
     * Instantiates a new schedule template.
     *
     * @param schedule
     *            the schedule
     */
    public ScheduleTemplate(Schedule schedule) {
        this.schedule = schedule;
    }

    /**
     * Instantiates a new schedule template.
     *
     * @param templateByOnscreenTmpl
     *            the template by onscreen tmpl
     * @param schedule
     *            the schedule
     * @param templateByEmailTmpl
     *            the template by email tmpl
     * @param delay
     *            the delay
     */
    public ScheduleTemplate(Template templateByOnscreenTmpl, Schedule schedule,
            Template templateByEmailTmpl, Integer delay) {
        this.templateByOnscreenTmpl = templateByOnscreenTmpl;
        this.schedule = schedule;
        this.templateByEmailTmpl = templateByEmailTmpl;
        this.delay = delay;
    }

    /**
     * Gets the schedule id.
     *
     * @return the schedule id
     */
    @Id
    @Column(name = "SCHEDULE_ID", unique = true, nullable = false)
    public String getScheduleId() {
        return this.scheduleId;
    }

    /**
     * Sets the schedule id.
     *
     * @param scheduleId
     *            the new schedule id
     */
    public void setScheduleId(String scheduleId) {
        this.scheduleId = scheduleId;
    }

    /**
     * Gets the template by onscreen tmpl.
     *
     * @return the template by onscreen tmpl
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ONSCREEN_TMPL")
    public Template getTemplateByOnscreenTmpl() {
        return this.templateByOnscreenTmpl;
    }

    /**
     * Sets the template by onscreen tmpl.
     *
     * @param templateByOnscreenTmpl
     *            the new template by onscreen tmpl
     */
    public void setTemplateByOnscreenTmpl(Template templateByOnscreenTmpl) {
        this.templateByOnscreenTmpl = templateByOnscreenTmpl;
    }

    /**
     * Gets the schedule.
     *
     * @return the schedule
     */
    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    @OnDelete(action = OnDeleteAction.CASCADE)
    public Schedule getSchedule() {
        return this.schedule;
    }

    /**
     * Sets the schedule.
     *
     * @param schedule
     *            the new schedule
     */
    public void setSchedule(Schedule schedule) {
        this.schedule = schedule;
    }

    /**
     * Gets the template by email tmpl.
     *
     * @return the template by email tmpl
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "EMAIL_TMPL")
    public Template getTemplateByEmailTmpl() {
        return this.templateByEmailTmpl;
    }

    /**
     * Sets the template by email tmpl.
     *
     * @param templateByEmailTmpl
     *            the new template by email tmpl
     */
    public void setTemplateByEmailTmpl(Template templateByEmailTmpl) {
        this.templateByEmailTmpl = templateByEmailTmpl;
    }

    /**
     * Gets the delay.
     *
     * @return the delay
     */
    @Column(name = "DELAY", precision = 22, scale = 0)
    public Integer getDelay() {
        return this.delay;
    }

    /**
     * Sets the delay.
     *
     * @param delay
     *            the new delay
     */
    public void setDelay(Integer delay) {
        this.delay = delay;
    }

}
