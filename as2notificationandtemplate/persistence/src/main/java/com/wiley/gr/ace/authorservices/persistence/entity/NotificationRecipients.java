package com.wiley.gr.ace.authorservices.persistence.entity;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


/**
 * NotificationRecipients generated by hbm2java.
 */
@Entity
@Table(name = "NOTIFICATION_RECIPIENTS")
public class NotificationRecipients implements java.io.Serializable {

	/** The notification id. */
	private String notificationId;
	
	/** The notification. */
	private Notification notification;
	
	/** The user id. */
	private String userId;
	
	/** The email. */
	private String email;

	/**
	 * Instantiates a new notification recipients.
	 */
	public NotificationRecipients() {
	}

	/**
	 * Instantiates a new notification recipients.
	 *
	 * @param notification the notification
	 */
	public NotificationRecipients(Notification notification) {
		this.notification = notification;
	}

	/**
	 * Instantiates a new notification recipients.
	 *
	 * @param notification the notification
	 * @param userId the user id
	 * @param email the email
	 */
	public NotificationRecipients(Notification notification, String userId,
			String email) {
		this.notification = notification;
		this.userId = userId;
		this.email = email;
	}

	/**
	 * Gets the notification id.
	 *
	 * @return the notification id
	 */
	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "notification"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "NOTIFICATION_ID", unique = true, nullable = false)
	public String getNotificationId() {
		return this.notificationId;
	}

	/**
	 * Sets the notification id.
	 *
	 * @param notificationId the new notification id
	 */
	public void setNotificationId(String notificationId) {
		this.notificationId = notificationId;
	}

	/**
	 * Gets the notification.
	 *
	 * @return the notification
	 */
	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Notification getNotification() {
		return this.notification;
	}

	/**
	 * Sets the notification.
	 *
	 * @param notification the new notification
	 */
	public void setNotification(Notification notification) {
		this.notification = notification;
	}

	/**
	 * Gets the user id.
	 *
	 * @return the user id
	 */
	@Column(name = "USER_ID")
	public String getUserId() {
		return this.userId;
	}

	/**
	 * Sets the user id.
	 *
	 * @param userId the new user id
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * Gets the email.
	 *
	 * @return the email
	 */
	@Column(name = "EMAIL")
	public String getEmail() {
		return this.email;
	}

	/**
	 * Sets the email.
	 *
	 * @param email the new email
	 */
	public void setEmail(String email) {
		this.email = email;
	}

}
