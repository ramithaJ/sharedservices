package com.wiley.gr.ace.authorservices.persistence.entity;



import java.sql.Clob;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


/**
 * Notification generated by hbm2java.
 */
@Entity
@Table(name = "NOTIFICATION")
public class Notification implements java.io.Serializable {

	/** The id. */
	private String id;
	
	/** The template. */
	private Template template;
	
	/** The app id. */
	private String appId;
	
	/** The sender id. */
	private String senderId;
	
	/** The sender email. */
	private String senderEmail;
	
	/** The content. */
	private Clob content;
	
	/** The type. */
	private String type;
	
	/** The sent on. */
	private Date sentOn;
	
	/** The unread. */
	private Character unread;
	
	/** The notification recipients. */
	private NotificationRecipients notificationRecipients;

	/**
	 * Instantiates a new notification.
	 */
	public Notification() {
	}

	/**
	 * Instantiates a new notification.
	 *
	 * @param id the id
	 */
	public Notification(String id) {
		this.id = id;
	}

	/**
	 * Instantiates a new notification.
	 *
	 * @param id the id
	 * @param template the template
	 * @param appId the app id
	 * @param senderId the sender id
	 * @param senderEmail the sender email
	 * @param content the content
	 * @param type the type
	 * @param sentOn the sent on
	 * @param unread the unread
	 * @param notificationRecipients the notification recipients
	 */
	public Notification(String id, Template template, String appId,
			String senderId, String senderEmail, Clob content, String type,
			Date sentOn, Character unread,
			NotificationRecipients notificationRecipients) {
		this.id = id;
		this.template = template;
		this.appId = appId;
		this.senderId = senderId;
		this.senderEmail = senderEmail;
		this.content = content;
		this.type = type;
		this.sentOn = sentOn;
		this.unread = unread;
		this.notificationRecipients = notificationRecipients;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false)
	public String getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * Gets the template.
	 *
	 * @return the template
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORIG_TMPL_ID")
	public Template getTemplate() {
		return this.template;
	}

	/**
	 * Sets the template.
	 *
	 * @param template the new template
	 */
	public void setTemplate(Template template) {
		this.template = template;
	}

	/**
	 * Gets the app id.
	 *
	 * @return the app id
	 */
	@Column(name = "APP_ID", length = 25)
	public String getAppId() {
		return this.appId;
	}

	/**
	 * Sets the app id.
	 *
	 * @param appId the new app id
	 */
	public void setAppId(String appId) {
		this.appId = appId;
	}

	/**
	 * Gets the sender id.
	 *
	 * @return the sender id
	 */
	@Column(name = "SENDER_ID")
	public String getSenderId() {
		return this.senderId;
	}

	/**
	 * Sets the sender id.
	 *
	 * @param senderId the new sender id
	 */
	public void setSenderId(String senderId) {
		this.senderId = senderId;
	}

	/**
	 * Gets the sender email.
	 *
	 * @return the sender email
	 */
	@Column(name = "SENDER_EMAIL")
	public String getSenderEmail() {
		return this.senderEmail;
	}

	/**
	 * Sets the sender email.
	 *
	 * @param senderEmail the new sender email
	 */
	public void setSenderEmail(String senderEmail) {
		this.senderEmail = senderEmail;
	}

	/**
	 * Gets the content.
	 *
	 * @return the content
	 */
	@Column(name = "CONTENT")
	public Clob getContent() {
		return this.content;
	}

	/**
	 * Sets the content.
	 *
	 * @param content the new content
	 */
	public void setContent(Clob content) {
		this.content = content;
	}

	/**
	 * Gets the type.
	 *
	 * @return the type
	 */
	@Column(name = "TYPE", length = 25)
	public String getType() {
		return this.type;
	}

	/**
	 * Sets the type.
	 *
	 * @param type the new type
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * Gets the sent on.
	 *
	 * @return the sent on
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "SENT_ON", length = 7)
	public Date getSentOn() {
		return this.sentOn;
	}

	/**
	 * Sets the sent on.
	 *
	 * @param sentOn the new sent on
	 */
	public void setSentOn(Date sentOn) {
		this.sentOn = sentOn;
	}

	/**
	 * Gets the unread.
	 *
	 * @return the unread
	 */
	@Column(name = "UNREAD", length = 1)
	public Character getUnread() {
		return this.unread;
	}

	/**
	 * Sets the unread.
	 *
	 * @param unread the new unread
	 */
	public void setUnread(Character unread) {
		this.unread = unread;
	}

	/**
	 * Gets the notification recipients.
	 *
	 * @return the notification recipients
	 */
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "notification")
	public NotificationRecipients getNotificationRecipients() {
		return this.notificationRecipients;
	}

	/**
	 * Sets the notification recipients.
	 *
	 * @param notificationRecipients the new notification recipients
	 */
	public void setNotificationRecipients(
			NotificationRecipients notificationRecipients) {
		this.notificationRecipients = notificationRecipients;
	}

}
