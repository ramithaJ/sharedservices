package com.wiley.gr.ace.authorservices.persistence.entity;

// Generated Oct 1, 2015 3:39:30 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Notification generated by hbm2java
 */
@Entity
@Table(name = "notification", catalog = "wpp_ntf_db")
public class Notification implements java.io.Serializable {

    private Long id;
    private Template template;
    private String appId;
    private String senderId;
    private String senderEmail;
    private byte[] content;
    private String type;
    private Date sentOn;
    private Boolean unread;
    private String attachmentPath;
    private NotificationData notificationData;
    private Set<NotificationRecipients> notificationRecipientses = new HashSet<NotificationRecipients>(
            0);

    public Notification() {
    }

    public Notification(Template template, String appId, String senderId,
            String senderEmail, byte[] content, String type, Date sentOn,
            Boolean unread, String attachmentPath,
            NotificationData notificationData,
            Set<NotificationRecipients> notificationRecipientses) {
        this.template = template;
        this.appId = appId;
        this.senderId = senderId;
        this.senderEmail = senderEmail;
        this.content = content;
        this.type = type;
        this.sentOn = sentOn;
        this.unread = unread;
        this.attachmentPath = attachmentPath;
        this.notificationData = notificationData;
        this.notificationRecipientses = notificationRecipientses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ORIG_TMPL_ID")
    public Template getTemplate() {
        return this.template;
    }

    public void setTemplate(Template template) {
        this.template = template;
    }

    @Column(name = "APP_ID", length = 25)
    public String getAppId() {
        return this.appId;
    }

    public void setAppId(String appId) {
        this.appId = appId;
    }

    @Column(name = "SENDER_ID")
    public String getSenderId() {
        return this.senderId;
    }

    public void setSenderId(String senderId) {
        this.senderId = senderId;
    }

    @Column(name = "SENDER_EMAIL")
    public String getSenderEmail() {
        return this.senderEmail;
    }

    public void setSenderEmail(String senderEmail) {
        this.senderEmail = senderEmail;
    }

    @Column(name = "CONTENT")
    public byte[] getContent() {
        return this.content;
    }

    public void setContent(byte[] content) {
        this.content = content;
    }

    @Column(name = "TYPE", length = 25)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SENT_ON", length = 19)
    public Date getSentOn() {
        return this.sentOn;
    }

    public void setSentOn(Date sentOn) {
        this.sentOn = sentOn;
    }

    @Column(name = "UNREAD", length = 1)
    public Boolean getUnread() {
        return this.unread;
    }

    public void setUnread(Boolean unread) {
        this.unread = unread;
    }

    @Column(name = "ATTACHMENT_PATH", length = 1000)
    public String getAttachmentPath() {
        return this.attachmentPath;
    }

    public void setAttachmentPath(String attachmentPath) {
        this.attachmentPath = attachmentPath;
    }

    @OneToOne(fetch = FetchType.EAGER, mappedBy = "notification")
    @Cascade(CascadeType.ALL)
    public NotificationData getNotificationData() {
        return this.notificationData;
    }

    public void setNotificationData(NotificationData notificationData) {
        this.notificationData = notificationData;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "notification")
    public Set<NotificationRecipients> getNotificationRecipientses() {
        return this.notificationRecipientses;
    }

    public void setNotificationRecipientses(
            Set<NotificationRecipients> notificationRecipientses) {
        this.notificationRecipientses = notificationRecipientses;
    }

}
